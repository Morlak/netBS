<?php

namespace Interne\FactureBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * FactureRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FactureRepository extends EntityRepository
{
    /*
     * cette fonction est utilisée par le formulaire de recherche de facture.
     * on crée une requete custom.
     */
    public function findBySearch($facture,$searchParameters)
    {
        //on crée un nouvelle requete qui sera custom
        $queryBuilder = $this->createQueryBuilder('facture');

        /*
         * Elements de recherche contenu dans le formulaire de facture standard
         */
        $parameter = $facture->getId();
        if($parameter != null)
        {
            $queryBuilder->andWhere('facture.id = :id')->setParameter('id', $parameter);
        }


        $parameter = $facture->getTitre();
        if($parameter != null)
        {
            $queryBuilder->andWhere('facture.titre = :titre')->setParameter('titre', $parameter);
        }

        $parameter = $facture->getRemarque();
        if($parameter != null)
        {
            $queryBuilder->andWhere('facture.remarque = :remarque')->setParameter('remarque', $parameter);
        }

        $parameter = $facture->getMontantEmis();
        if($parameter != null)
        {
            $queryBuilder->andWhere('facture.montantEmis = :montantEmis')->setParameter('montantEmis', $parameter);
        }

        $parameter = $facture->getMontantRecu();
        if($parameter != null)
        {
            $queryBuilder->andWhere('facture.montantRecu = :montantRecu')->setParameter('montantRecu', $parameter);
        }

        $parameter = $facture->getStatut();
        if($parameter != null)
        {
            $queryBuilder->andWhere('facture.statut = :statut')->setParameter('statut', $parameter);
        }

        /*
         * Elements de recherche spécifique qui permet d'affiner la recherche.
         */
        $parameter = $searchParameters['montantEmisMinimum'];
        if($parameter != null)
        {
            $queryBuilder->andWhere('facture.montantEmis >= :montantEmisMinimum')
                            ->setParameter('montantEmisMinimum', $parameter);
        }

        $parameter = $searchParameters['montantEmisMaximum'];
        if($parameter != null)
        {
            $queryBuilder->andWhere('facture.montantEmis <= :montantEmisMaximum')
                ->setParameter('montantEmisMaximum', $parameter);
        }

        $parameter = $searchParameters['montantRecuMinimum'];
        if($parameter != null)
        {
            $queryBuilder->andWhere('facture.montantRecu >= :montantRecuMinimum')
                ->setParameter('montantRecuMinimum', $parameter);
        }

        $parameter = $searchParameters['montantRecuMaximum'];
        if($parameter != null)
        {
            $queryBuilder->andWhere('facture.montantRecu <= :montantRecuMaximum')
                ->setParameter('montantRecuMaximum', $parameter);
        }

        $parameter = $searchParameters['nombreRappel'];
        if($parameter != null)
        {
            /*
             * A FAIRE
             */
        }


        return $queryBuilder->getQuery()->getResult();



    }
}
